package aws

import (
	"context"

	opengovernance "github.com/opengovern/og-describer-aws/pkg/sdk/es"

	"github.com/turbot/steampipe-plugin-sdk/v5/grpc/proto"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin/transform"
)

//// TABLE DEFINITION

func tableAwsKinesisConsumer(_ context.Context) *plugin.Table {
	return &plugin.Table{
		Name:        "aws_kinesis_consumer",
		Description: "AWS Kinesis Consumer",
		Get: &plugin.GetConfig{
			KeyColumns: plugin.SingleColumn("consumer_arn"),
			IgnoreConfig: &plugin.IgnoreConfig{
				ShouldIgnoreErrorFunc: shouldIgnoreErrors([]string{"ResourceNotFoundException"}),
			},
			Hydrate: opengovernance.GetKinesisConsumer,
		},
		List: &plugin.ListConfig{
			ParentHydrate: opengovernance.ListKinesisStream,
			Hydrate:       opengovernance.ListKinesisConsumer,
		},
		Columns: awsOgRegionalColumns([]*plugin.Column{
			{
				Name:        "consumer_name",
				Description: "The name of the consumer.",
				Type:        proto.ColumnType_STRING,
				Transform:   transform.FromField("Description.Consumer.ConsumerName")},
			{
				Name:        "consumer_arn",
				Description: "An ARN generated by Kinesis Data Streams when consumer is registered.",
				Type:        proto.ColumnType_STRING,
				Transform:   transform.FromField("Description.Consumer.ConsumerARN")},
			{
				Name:        "stream_arn",
				Description: "The ARN of the stream with which you registered the consumer.",
				Type:        proto.ColumnType_STRING,
				Transform:   transform.FromField("Description.StreamARN")},
			{
				Name:        "consumer_status",
				Description: "The current status of consumer.",
				Type:        proto.ColumnType_STRING,
				Transform:   transform.FromField("Description.Consumer.ConsumerStatus")},
			{
				Name:        "consumer_creation_timestamp",
				Description: "Timestamp when consumer was created.",
				Type:        proto.ColumnType_TIMESTAMP,
				Transform:   transform.FromField("Description.Consumer.ConsumerCreationTimestamp")},
			// Standard columns for all tables
			{
				Name:        "title",
				Description: resourceInterfaceDescription("title"),
				Type:        proto.ColumnType_STRING,
				Transform:   transform.FromField("Description.Consumer.ConsumerName")},
			{
				Name:        "akas",
				Description: resourceInterfaceDescription("akas"),
				Type:        proto.ColumnType_JSON,
				Transform:   transform.FromField("Description.Consumer.ConsumerARN").Transform(arnToAkas),
			},
		}),
	}
}
