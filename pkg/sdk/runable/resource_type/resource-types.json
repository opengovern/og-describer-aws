[
  {
    "ResourceName": "AWS::Redshift::Snapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftSnapshot)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetRedshiftSnapshot)",
    "SteampipeTable": "aws_redshift_snapshot",
    "Model": "RedshiftSnapshot"
  },
  {
    "ResourceName": "AWS::IAM::AccountSummary",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMAccountSummary)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_account_summary",
    "Model": "IAMAccountSummary"
  },
  {
    "ResourceName": "AWS::Glacier::Vault",
    "ListDescriber": "ParallelDescribeRegional(describer.GlacierVault)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetGlacierVault)",
    "SteampipeTable": "aws_glacier_vault",
    "Model": "GlacierVault"
  },
  {
    "ResourceName": "AWS::Organizations::Organization",
    "ListDescriber": "SequentialDescribeGlobal(describer.OrganizationsOrganization)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_organization",
    "Model": "OrganizationsOrganization"
  },
  {
    "ResourceName": "AWS::Organizations::Policy",
    "ListDescriber": "SequentialDescribeGlobal(describer.OrganizationsPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_policy",
    "Model": "OrganizationsPolicy"
  },
  {
    "ResourceName": "AWS::Organizations::PolicyTarget",
    "ListDescriber": "SequentialDescribeGlobal(describer.OrganizationsPolicyTarget)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_policy_target",
    "Model": "OrganizationsPolicyTarget"
  },
  {
    "ResourceName": "AWS::Organizations::OrganizationalUnit",
    "ListDescriber": "SequentialDescribeGlobal(describer.OrganizationsOrganizationalUnit)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_organizational_unit",
    "Model": "OrganizationsOrganizationalUnit"
  },
  {
    "ResourceName": "AWS::Organizations::Root",
    "ListDescriber": "SequentialDescribeGlobal(describer.OrganizationsRoot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_root",
    "Model": "OrganizationsRoot"
  },
  {
    "ResourceName": "AWS::CloudSearch::Domain",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudSearchDomain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudsearch_domain",
    "Model": "CloudSearchDomain"
  },
  {
    "ResourceName": "AWS::DynamoDb::GlobalSecondaryIndex",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbGlobalSecondaryIndex)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetDynamoDbGlobalSecondaryIndex)",
    "SteampipeTable": "aws_dynamodb_global_secondary_index",
    "Model": "DynamoDbGlobalSecondaryIndex"
  },
  {
    "ResourceName": "AWS::EC2::RouteTable",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Route53RouteTable.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2RouteTable)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2RouteTable)",
    "SteampipeTable": "aws_vpc_route_table",
    "Model": "EC2RouteTable"
  },
  {
    "ResourceName": "AWS::SecurityHub::Hub",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubHub)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_hub",
    "Model": "SecurityHubHub"
  },
  {
    "ResourceName": "AWS::StorageGateway::StorageGateway",
    "ListDescriber": "ParallelDescribeRegional(describer.StorageGatewayStorageGateway)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_storagegateway_storage_gateway",
    "Model": "StorageGatewayStorageGateway"
  },
  {
    "ResourceName": "AWS::Inspector::AssessmentTemplate",
    "ListDescriber": "ParallelDescribeRegional(describer.InspectorAssessmentTemplate)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetInspectorAssessmentTemplate)",
    "SteampipeTable": "aws_inspector_assessment_template",
    "Model": "InspectorAssessmentTemplate"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingV2ListenerRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_load_balancer_listener_rule",
    "Model": "ElasticLoadBalancingV2Rule"
  },
  {
    "ResourceName": "AWS::IAM::Role",
    "Tags": {
      "category": ["Management \u0026 Governance"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/IdentityAccessManagementRole.svg"
      ]
    },
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMRole)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_role",
    "Model": "IAMRole"
  },
  {
    "ResourceName": "AWS::Backup::ProtectedResource",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupProtectedResource)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_protected_resource",
    "Model": "BackupProtectedResource"
  },
  {
    "ResourceName": "AWS::CodeCommit::Repository",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeCommitRepository)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codecommit_repository",
    "Model": "CodeCommitRepository"
  },
  {
    "ResourceName": "AWS::EC2::VPCEndpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPCEndpoint)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VPCEndpoint)",
    "SteampipeTable": "aws_vpc_endpoint",
    "Model": "EC2VPCEndpoint"
  },
  {
    "ResourceName": "AWS::EventBridge::EventRule",
    "ListDescriber": "ParallelDescribeRegional(describer.EventBridgeRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eventbridge_rule",
    "Model": "EventBridgeRule"
  },
  {
    "ResourceName": "AWS::CloudFront::OriginAccessControl",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontOriginAccessControl)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_origin_access_control",
    "Model": "CloudFrontOriginAccessControl"
  },
  {
    "ResourceName": "AWS::CodeBuild::Project",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeBuildProject)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetCodeBuildProject)",
    "SteampipeTable": "aws_codebuild_project",
    "Model": "CodeBuildProject"
  },
  {
    "ResourceName": "AWS::CodeBuild::Build",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeBuildBuild)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetCodeBuildBuild)",
    "SteampipeTable": "aws_codebuild_build",
    "Model": "CodeBuildBuild"
  },
  {
    "ResourceName": "AWS::ElastiCache::ParameterGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.ElastiCacheParameterGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elasticache_parameter_group",
    "Model": "ElastiCacheParameterGroup"
  },
  {
    "ResourceName": "AWS::MemoryDb::Cluster",
    "ListDescriber": "ParallelDescribeRegional(describer.MemoryDbCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_memorydb_cluster",
    "Model": "MemoryDbCluster"
  },
  {
    "ResourceName": "AWS::Glue::Crawler",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueCrawler)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetGlueCrawler)",
    "SteampipeTable": "aws_glue_crawler",
    "Model": "GlueCrawler"
  },
  {
    "ResourceName": "AWS::DirectConnect::Gateway",
    "ListDescriber": "ParallelDescribeRegional(describer.DirectConnectGateway)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_directconnect_gateway",
    "Model": "DirectConnectGateway"
  },
  {
    "ResourceName": "AWS::DynamoDb::BackUp",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbBackUp)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodb_backup",
    "Model": "DynamoDbBackup"
  },
  {
    "ResourceName": "AWS::EC2::EIP",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2EIP)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2EIP)",
    "SteampipeTable": "aws_vpc_eip",
    "Model": "EC2EIP"
  },
  {
    "ResourceName": "AWS::EC2::InternetGateway",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/InternetGateway.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2InternetGateway)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2InternetGateway)",
    "SteampipeTable": "aws_vpc_internet_gateway",
    "Model": "EC2InternetGateway"
  },
  {
    "ResourceName": "AWS::GuardDuty::PublishingDestination",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyPublishingDestination)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_publishing_destination",
    "Model": "GuardDutyPublishingDestination"
  },
  {
    "ResourceName": "AWS::KinesisAnalyticsV2::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.KinesisAnalyticsV2Application)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kinesisanalyticsv2_application",
    "Model": "KinesisAnalyticsV2Application"
  },
  {
    "ResourceName": "AWS::EMR::Instance",
    "ListDescriber": "ParallelDescribeRegional(describer.EMRInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_emr_instance",
    "Model": "EMRInstance"
  },
  {
    "ResourceName": "AWS::EMR::BlockPublicAccessConfiguration",
    "ListDescriber": "ParallelDescribeRegional(describer.EMRBlockPublicAccessConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_emr_block_public_access_configuration",
    "Model": "EMRBlockPublicAccessConfiguration"
  },
  {
    "ResourceName": "AWS::ApiGateway::RestApi",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ApiGateway.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayRestAPI)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayRestAPI)",
    "SteampipeTable": "aws_api_gateway_rest_api",
    "Model": "ApiGatewayRestAPI"
  },
  {
    "ResourceName": "AWS::ApiGatewayV2::Integration",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayV2Integration)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayV2Integration)",
    "SteampipeTable": "aws_api_gatewayv2_integration",
    "Model": "ApiGatewayV2Integration"
  },
  {
    "ResourceName": "AWS::AutoScaling::AutoScalingGroup",
    "Tags": {
      "category": ["Compute"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Ec2AutoScaling.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.AutoScalingAutoScalingGroup)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetAutoScalingAutoScalingGroup)",
    "SteampipeTable": "aws_ec2_autoscaling_group",
    "Model": "AutoScalingGroup"
  },
  {
    "ResourceName": "AWS::DynamoDb::TableExport",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbTableExport)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodb_table_export",
    "Model": "DynamoDbTableExport"
  },
  {
    "ResourceName": "AWS::EC2::KeyPair",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2KeyPair)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2KeyPair)",
    "SteampipeTable": "aws_ec2_key_pair",
    "Model": "EC2KeyPair"
  },
  {
    "ResourceName": "AWS::EFS::FileSystem",
    "Tags": {
      "category": ["Storage"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticFileSystem.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EFSFileSystem)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_efs_file_system",
    "Model": "EFSFileSystem"
  },
  {
    "ResourceName": "AWS::Kafka::Cluster",
    "Tags": {
      "category": ["PaaS"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ManagedStreamingForKafka.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.KafkaCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kafka_cluster",
    "Model": "KafkaCluster"
  },
  {
    "ResourceName": "AWS::SecretsManager::Secret",
    "ListDescriber": "ParallelDescribeRegional(describer.SecretsManagerSecret)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_secretsmanager_secret",
    "Model": "SecretsManagerSecret"
  },
  {
    "ResourceName": "AWS::Backup::LegalHold",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupLegalHold)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_legal_hold",
    "Model": "BackupLegalHold"
  },
  {
    "ResourceName": "AWS::CloudFront::Function",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontFunction)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_function",
    "Model": "CloudFrontFunction"
  },
  {
    "ResourceName": "AWS::GlobalAccelerator::EndpointGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.GlobalAcceleratorEndpointGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_globalaccelerator_endpoint_group",
    "Model": "GlobalAcceleratorEndpointGroup"
  },
  {
    "ResourceName": "AWS::DAX::ParameterGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.DAXParameterGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dax_parameter_group",
    "Model": "DAXParameterGroup"
  },
  {
    "ResourceName": "AWS::SQS::Queue",
    "ListDescriber": "ParallelDescribeRegional(describer.SQSQueue)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sqs_queue",
    "Model": "SQSQueue"
  },
  {
    "ResourceName": "AWS::Config::Rule",
    "ListDescriber": "ParallelDescribeRegional(describer.ConfigRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_config_rule",
    "Model": "ConfigRule"
  },
  {
    "ResourceName": "AWS::GuardDuty::Member",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyMember)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_member",
    "Model": "GuardDutyMember"
  },
  {
    "ResourceName": "AWS::Inspector::Exclusion",
    "ListDescriber": "ParallelDescribeRegional(describer.InspectorExclusion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector_exclusion",
    "Model": "InspectorExclusion"
  },
  {
    "ResourceName": "AWS::DirectoryService::Directory",
    "ListDescriber": "ParallelDescribeRegional(describer.DirectoryServiceDirectory)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_directory_service_directory",
    "Model": "DirectoryServiceDirectory"
  },
  {
    "ResourceName": "AWS::DirectoryService::Certificate",
    "ListDescriber": "ParallelDescribeRegional(describer.DirectoryServiceCertificate)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_directory_service_certificate",
    "Model": "DirectoryServiceCertificate"
  },
  {
    "ResourceName": "AWS::DirectoryService::LogSubscription",
    "ListDescriber": "ParallelDescribeRegional(describer.DirectoryServiceLogSubscription)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_directory_service_log_subscription",
    "Model": "DirectoryServiceLogSubscription"
  },
  {
    "ResourceName": "AWS::EFS::AccessPoint",
    "ListDescriber": "ParallelDescribeRegional(describer.EFSAccessPoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_efs_access_point",
    "Model": "EFSAccessPoint"
  },
  {
    "ResourceName": "AWS::IAM::PolicyAttachment",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMPolicyAttachment)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_policy_attachment",
    "Model": "IAMPolicyAttachment"
  },
  {
    "ResourceName": "AWS::IAM::CredentialReport",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMCredentialReport)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_credential_report",
    "Model": "IAMCredentialReport"
  },
  {
    "ResourceName": "AWS::RDS::GlobalCluster",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSGlobalCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_global_cluster",
    "Model": "RDSGlobalCluster"
  },
  {
    "ResourceName": "AWS::CostExplorer::ForcastDaily",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostForecastDaily)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_forecast_daily",
    "Model": "CostExplorerForcastDaily"
  },
  {
    "ResourceName": "AWS::GuardDuty::Detector",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyDetector)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_detector",
    "Model": "GuardDutyDetector"
  },
  {
    "ResourceName": "AWS::SNS::Topic",
    "ListDescriber": "ParallelDescribeRegional(describer.SNSTopic)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sns_topic",
    "Model": "SNSTopic"
  },
  {
    "ResourceName": "AWS::AppConfig::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.AppConfigApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appconfig_application",
    "Model": "AppConfigApplication"
  },
  {
    "ResourceName": "AWS::Batch::Job",
    "ListDescriber": "ParallelDescribeRegional(describer.BatchJob)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_batch_job",
    "Model": "BatchJob"
  },
  {
    "ResourceName": "AWS::Batch::JobQueue",
    "ListDescriber": "ParallelDescribeRegional(describer.BatchJobQueue)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_batchjob_queue",
    "Model": "BatchJobQueue"
  },
  {
    "ResourceName": "AWS::ECS::Service",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSService)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetECSService)",
    "SteampipeTable": "aws_ecs_service",
    "Model": "ECSService"
  },
  {
    "ResourceName": "AWS::FSX::Task",
    "ListDescriber": "ParallelDescribeRegional(describer.FSXTask)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_fsx_task",
    "Model": "FSXTask"
  },
  {
    "ResourceName": "AWS::IAM::VirtualMFADevice",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMVirtualMFADevice)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_virtual_mfa_device",
    "Model": "IAMVirtualMFADevice"
  },
  {
    "ResourceName": "AWS::WAFv2::WebACL",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFv2WebACL)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafv2_web_acl",
    "Model": "WAFv2WebACL"
  },
  {
    "ResourceName": "AWS::ApplicationAutoScaling::Target",
    "ListDescriber": "ParallelDescribeRegional(describer.ApplicationAutoScalingTarget)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appautoscaling_target",
    "Model": "ApplicationAutoScalingTarget"
  },
  {
    "ResourceName": "AWS::ApplicationAutoScaling::Policy",
    "ListDescriber": "ParallelDescribeRegional(describer.ApplicationAutoScalingPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appautoscaling_policy",
    "Model": "ApplicationAutoScalingPolicy"
  },
  {
    "ResourceName": "AWS::Backup::Vault",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupVault)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_vault",
    "Model": "BackupVault"
  },
  {
    "ResourceName": "AWS::ElastiCache::Cluster",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElastiCache.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ElastiCacheCluster)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetElastiCacheCluster)",
    "SteampipeTable": "aws_elasticache_cluster",
    "Model": "ElastiCacheCluster"
  },
  {
    "ResourceName": "AWS::Logs::LogGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchLogsLogGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudwatch_log_group",
    "Model": "CloudWatchLogsLogGroup"
  },
  {
    "ResourceName": "AWS::S3::Bucket",
    "Tags": {
      "category": ["Storage"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/SimpleStorageBucket.svg"
      ]
    },
    "ListDescriber": "SequentialDescribeGlobal(describer.S3Bucket)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_s3_bucket",
    "Model": "S3Bucket"
  },
  {
    "ResourceName": "AWS::S3::Object",
    "ListDescriber": "SequentialDescribeGlobal(describer.S3Object)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_s3_object",
    "Model": "S3Object"
  },
  {
    "ResourceName": "AWS::S3::BucketIntelligentTieringConfiguration",
    "ListDescriber": "SequentialDescribeGlobal(describer.S3BucketIntelligentTieringConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_s3_bucket_intelligent_tiering_configuration",
    "Model": "S3BucketIntelligentTieringConfiguration"
  },
  {
    "ResourceName": "AWS::S3::MultiRegionAccessPoint",
    "ListDescriber": "SequentialDescribeGlobal(describer.S3MultiRegionAccessPoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_s3_multi_region_access_point",
    "Model": "S3MultiRegionAccessPoint"
  },
  {
    "ResourceName": "AWS::CertificateManager::Certificate",
    "ListDescriber": "ParallelDescribeRegional(describer.CertificateManagerCertificate)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_acm_certificate",
    "Model": "CertificateManagerCertificate"
  },
  {
    "ResourceName": "AWS::EKS::AddonVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.EKSAddonVersion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eks_addon_version",
    "Model": "EKSAddonVersion"
  },
  {
    "ResourceName": "AWS::ApiGatewayV2::Api",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayV2API)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayV2API)",
    "SteampipeTable": "aws_api_gatewayv2_api",
    "Model": "ApiGatewayV2API"
  },
  {
    "ResourceName": "AWS::EC2::Volume",
    "Tags": {
      "category": ["Storage"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticBlockStoreVolume.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Volume)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Volume)",
    "SteampipeTable": "aws_ebs_volume",
    "Model": "EC2Volume"
  },
  {
    "ResourceName": "AWS::ApiGateway::ApiKey",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayApiKey)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_api_gateway_api_key",
    "Model": "ApiGatewayApiKey"
  },
  {
    "ResourceName": "AWS::Glue::Connection",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueConnection)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_connection",
    "Model": "GlueConnection"
  },
  {
    "ResourceName": "AWS::ECS::Task",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSTask)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecs_task",
    "Model": "ECSTask"
  },
  {
    "ResourceName": "AWS::SSM::ManagedInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMManagedInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_managed_instance",
    "Model": "SSMManagedInstance"
  },
  {
    "ResourceName": "AWS::SSM::Inventory",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMInventory)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_inventory",
    "Model": "SSMInventory"
  },
  {
    "ResourceName": "AWS::SSM::InventoryEntry",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMInventoryEntry)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_inventory_entry",
    "Model": "SSMInventoryEntry"
  },
  {
    "ResourceName": "AWS::SSM::MaintenanceWindow",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMMaintenanceWindow)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_maintenance_window",
    "Model": "SSMMaintenanceWindow"
  },
  {
    "ResourceName": "AWS::SSM::PatchBaseline",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMPatchBaseline)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_patch_baseline",
    "Model": "SSMPatchBaseline"
  },
  {
    "ResourceName": "AWS::SSM::Parameter",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMParameter)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_parameter",
    "Model": "SSMParameter"
  },
  {
    "ResourceName": "AWS::Lambda::Function",
    "Tags": {
      "category": ["Serverless"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Lambda.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.LambdaFunction)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetLambdaFunction)",
    "SteampipeTable": "aws_lambda_function",
    "Model": "LambdaFunction"
  },
  {
    "ResourceName": "AWS::RDS::DBSnapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_snapshot",
    "Model": "RDSDBSnapshot"
  },
  {
    "ResourceName": "AWS::CodeDeploy::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeDeployApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codedeploy_app",
    "Model": "CodeDeployApplication"
  },
  {
    "ResourceName": "AWS::CodeDeploy::DeploymentConfig",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeDeployDeploymentConfig)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codedeploy_deployment_config",
    "Model": "CodeDeployDeploymentConfig"
  },
  {
    "ResourceName": "AWS::EMR::Cluster",
    "ListDescriber": "ParallelDescribeRegional(describer.EMRCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_emr_cluster",
    "Model": "EMRCluster"
  },
  {
    "ResourceName": "AWS::IAM::AccessKey",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMAccessKey)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_access_key",
    "Model": "IAMAccessKey"
  },
  {
    "ResourceName": "AWS::IAM::SSHPublicKey",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMSSHPublicKey)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_ssh_public_key",
    "Model": "IAMSSHPublicKey"
  },
  {
    "ResourceName": "AWS::Glue::CatalogTable",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueCatalogTable)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_catalog_table",
    "Model": "GlueCatalogTable"
  },
  {
    "ResourceName": "AWS::CloudTrail::Channel",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailChannel)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudtrail_channel",
    "Model": "CloudTrailChannel"
  },
  {
    "ResourceName": "AWS::EC2::NetworkAcl",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2NetworkAcl)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2NetworkAcl)",
    "SteampipeTable": "aws_vpc_network_acl",
    "Model": "EC2NetworkAcl"
  },
  {
    "ResourceName": "AWS::ECS::ContainerInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSContainerInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecs_container_instance",
    "Model": "ECSContainerInstance"
  },
  {
    "ResourceName": "AWS::RedshiftServerless::Snapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftServerlessSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshiftserverless_snapshot",
    "Model": "RedshiftServerlessSnapshot"
  },
  {
    "ResourceName": "AWS::Workspaces::Bundle",
    "ListDescriber": "ParallelDescribeRegional(describer.WorkspacesBundle)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_workspaces_bundle",
    "Model": "WorkspacesBundle"
  },
  {
    "ResourceName": "AWS::CloudTrail::Trail",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailTrail)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudtrail_trail",
    "Model": "CloudTrailTrail"
  },
  {
    "ResourceName": "AWS::DAX::Parameter",
    "ListDescriber": "ParallelDescribeRegional(describer.DAXParameter)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dax_parameter",
    "Model": "DAXParameter"
  },
  {
    "ResourceName": "AWS::ECR::Image",
    "ListDescriber": "ParallelDescribeRegional(describer.ECRImage)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecr_image",
    "Model": "ECRImage"
  },
  {
    "ResourceName": "AWS::IAM::ServerCertificate",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMServerCertificate)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_server_certificate",
    "Model": "IAMServerCertificate"
  },
  {
    "ResourceName": "AWS::Keyspaces::Keyspace",
    "ListDescriber": "ParallelDescribeRegional(describer.KeyspacesKeyspace)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_keyspaces_keyspace",
    "Model": "KeyspacesKeyspace"
  },
  {
    "ResourceName": "AWS::S3::AccessPoint",
    "ListDescriber": "ParallelDescribeRegional(describer.S3AccessPoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_s3_access_point",
    "Model": "S3AccessPoint"
  },
  {
    "ResourceName": "AWS::SageMaker::EndpointConfiguration",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerEndpointConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_endpoint_configuration",
    "Model": "SageMakerEndpointConfiguration"
  },
  {
    "ResourceName": "AWS::ElastiCache::ReservedCacheNode",
    "ListDescriber": "ParallelDescribeRegional(describer.ElastiCacheReservedCacheNode)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elasticache_reserved_cache_node",
    "Model": "ElastiCacheReservedCacheNode"
  },
  {
    "ResourceName": "AWS::EMR::InstanceFleet",
    "ListDescriber": "ParallelDescribeRegional(describer.EMRInstanceFleet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_emr_instance_fleet",
    "Model": "EMRInstanceFleet"
  },
  {
    "ResourceName": "AWS::Account::Account",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMAccount)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_account",
    "Model": "IAMAccount"
  },
  {
    "ResourceName": "AWS::EC2::VPCPeeringConnection",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPCPeeringConnection)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VPCPeeringConnection)",
    "SteampipeTable": "aws_vpc_peering_connection",
    "Model": "EC2VpcPeeringConnection"
  },
  {
    "ResourceName": "AWS::EKS::FargateProfile",
    "ListDescriber": "ParallelDescribeRegional(describer.EKSFargateProfile)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eks_fargate_profile",
    "Model": "EKSFargateProfile"
  },
  {
    "ResourceName": "AWS::IAM::AccountPasswordPolicy",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMAccountPasswordPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_account_password_policy",
    "Model": "IAMAccountPasswordPolicy"
  },
  {
    "ResourceName": "AWS::CodePipeline::Pipeline",
    "ListDescriber": "ParallelDescribeRegional(describer.CodePipelinePipeline)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codepipeline_pipeline",
    "Model": "CodePipelinePipeline"
  },
  {
    "ResourceName": "AWS::DAX::Cluster",
    "ListDescriber": "ParallelDescribeRegional(describer.DAXCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dax_cluster",
    "Model": "DAXCluster"
  },
  {
    "ResourceName": "AWS::DLM::LifecyclePolicy",
    "ListDescriber": "ParallelDescribeRegional(describer.DLMLifecyclePolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dlm_lifecycle_policy",
    "Model": "DLMLifecyclePolicy"
  },
  {
    "ResourceName": "AWS::OpsWorksCM::Server",
    "ListDescriber": "ParallelDescribeRegional(describer.OpsWorksCMServer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_opsworkscm_server",
    "Model": "OpsWorksCMServer"
  },
  {
    "ResourceName": "AWS::AccessAnalyzer::Analyzer",
    "ListDescriber": "ParallelDescribeRegional(describer.AccessAnalyzerAnalyzer)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetAccessAnalyzerAnalyzer)",
    "SteampipeTable": "aws_accessanalyzer_analyzer",
    "Model": "AccessAnalyzerAnalyzer"
  },
  {
    "ResourceName": "AWS::AccessAnalyzer::Finding",
    "ListDescriber": "ParallelDescribeRegional(describer.AccessAnalyzerAnalyzerFinding)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_accessanalyzer_finding",
    "Model": "AccessAnalyzerAnalyzerFinding"
  },
  {
    "ResourceName": "AWS::ElastiCache::SubnetGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.ElastiCacheSubnetGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elasticache_subnet_group",
    "Model": "ElastiCacheSubnetGroup"
  },
  {
    "ResourceName": "AWS::FSX::Volume",
    "ListDescriber": "ParallelDescribeRegional(describer.FSXVolume)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_fsx_volume",
    "Model": "FSXVolume"
  },
  {
    "ResourceName": "AWS::Amplify::App",
    "ListDescriber": "ParallelDescribeRegional(describer.AmplifyApp)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_amplify_app",
    "Model": "AmplifyApp"
  },
  {
    "ResourceName": "AWS::CloudTrail::Query",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailQuery)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudtrail_query",
    "Model": "CloudTrailQuery"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByAccountMonthly",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByAccountLastMonth)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_account_monthly",
    "Model": "CostExplorerByAccountMonthly"
  },
  {
    "ResourceName": "AWS::ECR::PublicRegistry",
    "ListDescriber": "ParallelDescribeRegional(describer.ECRPublicRegistry)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecrpublic_registry",
    "Model": "ECRPublicRegistry"
  },
  {
    "ResourceName": "AWS::EC2::NetworkInterface",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2NetworkInterface)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2NetworkInterface)",
    "SteampipeTable": "aws_ec2_network_interface",
    "Model": "EC2NetworkInterface"
  },
  {
    "ResourceName": "AWS::EC2::VPNConnection",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPNConnection)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VPNConnection)",
    "SteampipeTable": "aws_vpc_vpn_connection",
    "Model": "EC2VPNConnection"
  },
  {
    "ResourceName": "AWS::FSX::StorageVirtualMachine",
    "ListDescriber": "ParallelDescribeRegional(describer.FSXStorageVirtualMachine)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_fsx_storage_virtual_machine",
    "Model": "FSXStorageVirtualMachine"
  },
  {
    "ResourceName": "AWS::ApiGateway::Authorizer",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayAuthorizer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_api_gateway_authorizer",
    "Model": "ApiGatewayAuthorizer"
  },
  {
    "ResourceName": "AWS::AppStream::Stack",
    "ListDescriber": "ParallelDescribeRegional(describer.AppStreamStack)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appstream_stack",
    "Model": "AppStreamStack"
  },
  {
    "ResourceName": "AWS::Athena::WorkGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.AthenaWrokgroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_athena_workgroup",
    "Model": "AthenaWorkGroup"
  },
  {
    "ResourceName": "AWS::Athena::QueryExecution",
    "ListDescriber": "ParallelDescribeRegional(describer.AthenaQueryExecution)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_athena_query_execution",
    "Model": "AthenaQueryExecution"
  },
  {
    "ResourceName": "AWS::AppStream::Image",
    "ListDescriber": "ParallelDescribeRegional(describer.AppStreamImage)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetAppStreamImage)",
    "SteampipeTable": "aws_appstream_image",
    "Model": "AppStreamImage"
  },
  {
    "ResourceName": "AWS::CloudWatch::Alarm",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchAlarm)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetCloudWatchAlarm)",
    "SteampipeTable": "aws_cloudwatch_alarm",
    "Model": "CloudWatchAlarm"
  },
  {
    "ResourceName": "AWS::CloudWatch::LogSubscriptionFilter",
    "ListDescriber": "SequentialDescribeRegional(describer.CloudWatchLogsSubscriptionFilter)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudwatch_log_subscription_filter",
    "Model": "CloudWatchLogSubscriptionFilter"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByRecordTypeMonthly",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByRecordTypeLastMonth)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_record_type_monthly",
    "Model": "CostExplorerByRecordTypeMonthly"
  },
  {
    "ResourceName": "AWS::RDS::DBCluster",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBCluster)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetRDSDBCluster)",
    "SteampipeTable": "aws_rds_db_cluster",
    "Model": "RDSDBCluster"
  },
  {
    "ResourceName": "AWS::RDS::DBClusterSnapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBClusterSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_cluster_snapshot",
    "Model": "RDSDBClusterSnapshot"
  },
  {
    "ResourceName": "AWS::Backup::Framework",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupFramework)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_framework",
    "Model": "BackupFramework"
  },
  {
    "ResourceName": "AWS::CodeBuild::SourceCredential",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeBuildSourceCredential)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codebuild_source_credential",
    "Model": "CodeBuildSourceCredential"
  },
  {
    "ResourceName": "AWS::IAM::ServiceSpecificCredential",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMServiceSpecificCredential)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_service_specific_credential",
    "Model": "IAMServiceSpecificCredential"
  },
  {
    "ResourceName": "AWS::EC2::CapacityReservationFleet",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2CapacityReservationFleet)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2CapacityReservationFleet)",
    "SteampipeTable": "aws_ec2_capacity_reservation_fleet",
    "Model": "EC2CapacityReservationFleet"
  },
  {
    "ResourceName": "AWS::NetworkFirewall::Firewall",
    "ListDescriber": "ParallelDescribeRegional(describer.NetworkFirewallFirewall)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_networkfirewall_firewall",
    "Model": "NetworkFirewallFirewall"
  },
  {
    "ResourceName": "AWS::Workspaces::Workspace",
    "ListDescriber": "ParallelDescribeRegional(describer.WorkspacesWorkspace)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_workspaces_workspace",
    "Model": "WorkspacesWorkspace"
  },
  {
    "ResourceName": "AWS::ElasticSearch::Domain",
    "ListDescriber": "ParallelDescribeRegional(describer.ESDomain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elasticsearch_domain",
    "Model": "ESDomain"
  },
  {
    "ResourceName": "AWS::RDS::DBInstance",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Rds.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBInstance)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetRDSDBInstance)",
    "SteampipeTable": "aws_rds_db_instance",
    "Model": "RDSDBInstance"
  },
  {
    "ResourceName": "AWS::RDS::DBInstanceAutomatedBackup",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBInstanceAutomatedBackup)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetRDSDBInstanceAutomatedBackup)",
    "SteampipeTable": "aws_rds_db_instance_automated_backup",
    "Model": "RDSDBInstanceAutomatedBackup"
  },
  {
    "ResourceName": "AWS::EFS::MountTarget",
    "ListDescriber": "ParallelDescribeRegional(describer.EFSMountTarget)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_efs_mount_target",
    "Model": "EFSMountTarget"
  },
  {
    "ResourceName": "AWS::GlobalAccelerator::Listener",
    "ListDescriber": "ParallelDescribeRegional(describer.GlobalAcceleratorListener)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_globalaccelerator_listener",
    "Model": "GlobalAcceleratorListener"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByUsageTypeDaily",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByServiceUsageLastDay)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_service_usage_type_daily",
    "Model": "CostExplorerByServiceUsageTypeDaily"
  },
  {
    "ResourceName": "AWS::EKS::Addon",
    "ListDescriber": "ParallelDescribeRegional(describer.EKSAddon)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eks_addon",
    "Model": "EKSAddon"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByServiceMonthly",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByServiceLastMonth)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_service_monthly",
    "Model": "CostExplorerByServiceMonthly"
  },
  {
    "ResourceName": "AWS::IAM::Policy",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_policy",
    "Model": "IAMPolicy"
  },
  {
    "ResourceName": "AWS::Redshift::Cluster",
    "Tags": {
      "category": ["Big Data"],
      "logo_uri": [""]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshift_cluster",
    "Model": "RedshiftCluster"
  },
  {
    "ResourceName": "AWS::WAFRegional::Rule",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRegionalRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafregional_rule",
    "Model": "WAFRegionalRule"
  },
  {
    "ResourceName": "AWS::WAFRegional::RuleGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRegionalRuleGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafregional_rule_group",
    "Model": "WAFRegionalRuleGroup"
  },
  {
    "ResourceName": "AWS::Glue::DataCatalogEncryptionSettings",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueDataCatalogEncryptionSettings)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_data_catalog_encryption_settings",
    "Model": "GlueDataCatalogEncryptionSettings"
  },
  {
    "ResourceName": "AWS::EC2::FlowLog",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2FlowLog)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2FlowLog)",
    "SteampipeTable": "aws_vpc_flow_log",
    "Model": "EC2FlowLog"
  },
  {
    "ResourceName": "AWS::EC2::IpamPool",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2IpamPool)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2IpamPool)",
    "SteampipeTable": "aws_ec2_ipam_pool",
    "Model": "EC2IpamPool"
  },
  {
    "ResourceName": "AWS::IAM::SamlProvider",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMSamlProvider)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_saml_provider",
    "Model": "IAMSamlProvider"
  },
  {
    "ResourceName": "AWS::Route53::HostedZone",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53HostedZone)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_zone",
    "Model": "Route53HostedZone"
  },
  {
    "ResourceName": "AWS::Route53::QueryLog",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53QueryLog)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_query_log",
    "Model": "Route53QueryLog"
  },
  {
    "ResourceName": "AWS::EC2::PlacementGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2PlacementGroup)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2PlacementGroup)",
    "SteampipeTable": "aws_ec2_placement_group",
    "Model": "EC2PlacementGroup"
  },
  {
    "ResourceName": "AWS::FSX::Snapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.FSXSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_fsx_snapshot",
    "Model": "FSXSnapshot"
  },
  {
    "ResourceName": "AWS::KMS::Key",
    "ListDescriber": "ParallelDescribeRegional(describer.KMSKey)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetKMSKey)",
    "SteampipeTable": "aws_kms_key",
    "Model": "KMSKey"
  },
  {
    "ResourceName": "AWS::KMS::KeyRotation",
    "ListDescriber": "ParallelDescribeRegional(describer.KMSKeyRotation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kms_key_rotation",
    "Model": "KMSKeyRotation"
  },
  {
    "ResourceName": "AWS::EC2::Ipam",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Ipam)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Ipam)",
    "SteampipeTable": "aws_ec2_ipam",
    "Model": "EC2Ipam"
  },
  {
    "ResourceName": "AWS::ElasticBeanstalk::Environment",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticBeanstalkEnvironment)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elastic_beanstalk_environment",
    "Model": "ElasticBeanstalkEnvironment"
  },
  {
    "ResourceName": "AWS::ElasticBeanstalk::ApplicationVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticBeanstalkApplicationVersion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elastic_beanstalk_application_version",
    "Model": "ElasticBeanstalkApplicationVersion"
  },
  {
    "ResourceName": "AWS::Lambda::FunctionVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.LambdaFunctionVersion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_lambda_version",
    "Model": "LambdaFunctionVersion"
  },
  {
    "ResourceName": "AWS::Glue::DevEndpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueDevEndpoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_dev_endpoint",
    "Model": "GlueDevEndpoint"
  },
  {
    "ResourceName": "AWS::Backup::RecoveryPoint",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupRecoveryPoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_recovery_point",
    "Model": "BackupRecoveryPoint"
  },
  {
    "ResourceName": "AWS::Backup::ReportPlan",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupReportPlan)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetBackupReportPlan)",
    "SteampipeTable": "aws_backup_report_plan",
    "Model": "BackupReportPlan"
  },
  {
    "ResourceName": "AWS::Backup::RegionSetting",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupRegionSetting)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_region_settings",
    "Model": "BackupRegionSetting"
  },
  {
    "ResourceName": "AWS::DynamoDbStreams::Stream",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbStream)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodbstreams_stream",
    "Model": "DynamoDbStream"
  },
  {
    "ResourceName": "AWS::EC2::EgressOnlyInternetGateway",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2EgressOnlyInternetGateway)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2EgressOnlyInternetGateway)",
    "SteampipeTable": "aws_vpc_egress_only_internet_gateway",
    "Model": "EC2EgressOnlyInternetGateway"
  },
  {
    "ResourceName": "AWS::CloudFront::Distribution",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/CloudFront.svg"
      ]
    },
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontDistribution)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_distribution",
    "Model": "CloudFrontDistribution"
  },
  {
    "ResourceName": "AWS::CloudFront::StreamingDistribution",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontStreamingDistribution)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_streamingdistribution",
    "Model": "CloudFrontStreamingDistribution"
  },
  {
    "ResourceName": "AWS::Glue::Job",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueJob)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetGlueJob)",
    "SteampipeTable": "aws_glue_job",
    "Model": "GlueJob"
  },
  {
    "ResourceName": "AWS::AppStream::Fleet",
    "ListDescriber": "ParallelDescribeRegional(describer.AppStreamFleet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appstream_fleet",
    "Model": "AppStreamFleet"
  },
  {
    "ResourceName": "AWS::SES::ConfigurationSet",
    "ListDescriber": "ParallelDescribeRegional(describer.SESConfigurationSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ses_configuration_set",
    "Model": "SESConfigurationSet"
  },
  {
    "ResourceName": "AWS::IAM::User",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMUser)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_user",
    "Model": "IAMUser"
  },
  {
    "ResourceName": "AWS::CloudFront::OriginRequestPolicy",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontOriginRequestPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_origin_request_policy",
    "Model": "CloudFrontOriginRequestPolicy"
  },
  {
    "ResourceName": "AWS::EC2::SecurityGroup",
    "Tags": {
      "category": ["Networking"]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2SecurityGroup)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2SecurityGroup)",
    "SteampipeTable": "aws_vpc_security_group",
    "Model": "EC2SecurityGroup"
  },
  {
    "ResourceName": "AWS::GuardDuty::IPSet",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyIPSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_ipset",
    "Model": "GuardDutyIPSet"
  },
  {
    "ResourceName": "AWS::EKS::Cluster",
    "ListDescriber": "ParallelDescribeRegional(describer.EKSCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eks_cluster",
    "Model": "EKSCluster"
  },
  {
    "ResourceName": "AWS::Grafana::Workspace",
    "ListDescriber": "ParallelDescribeRegional(describer.GrafanaWorkspace)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_grafana_workspace",
    "Model": "GrafanaWorkspace"
  },
  {
    "ResourceName": "AWS::Glue::CatalogDatabase",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueCatalogDatabase)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_catalog_database",
    "Model": "GlueCatalogDatabase"
  },
  {
    "ResourceName": "AWS::Health::Event",
    "ListDescriber": "ParallelDescribeRegional(describer.HealthEvent)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_health_event",
    "Model": "HealthEvent"
  },
  {
    "ResourceName": "AWS::Health::AffectedEntity",
    "ListDescriber": "ParallelDescribeRegional(describer.HealthAffectedEntity)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_health_affected_entity",
    "Model": "HealthAffectedEntity"
  },
  {
    "ResourceName": "AWS::CloudFormation::StackSet",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudFormationStackSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudformation_stack_set",
    "Model": "CloudFormationStackSet"
  },
  {
    "ResourceName": "AWS::EC2::AvailabilityZone",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2AvailabilityZone)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2AvailabilityZone)",
    "SteampipeTable": "aws_availability_zone",
    "Model": "EC2AvailabilityZone"
  },
  {
    "ResourceName": "AWS::EC2::TransitGateway",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2TransitGateway)",
    "GetDescriber": " ParallelDescribeRegionalSingleResource(describer.GetEC2TransitGateway)",
    "SteampipeTable": "aws_ec2_transit_gateway",
    "Model": "EC2TransitGateway"
  },
  {
    "ResourceName": "AWS::ApiGateway::UsagePlan",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayUsagePlan)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_api_gateway_usage_plan",
    "Model": "ApiGatewayUsagePlan"
  },
  {
    "ResourceName": "AWS::Inspector::Finding",
    "ListDescriber": "ParallelDescribeRegional(describer.InspectorFinding)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector_finding",
    "Model": "InspectorFinding"
  },
  {
    "ResourceName": "AWS::EC2::Fleet",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Fleet)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Fleet)",
    "SteampipeTable": "aws_ec2_fleet",
    "Model": "EC2Fleet"
  },
  {
    "ResourceName": "AWS::ElasticBeanstalk::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticBeanstalkApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elastic_beanstalk_application",
    "Model": "ElasticBeanstalkApplication"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingV2LoadBalancer)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetElasticLoadBalancingV2LoadBalancer)",
    "SteampipeTable": "aws_ec2_application_load_balancer",
    "Model": "ElasticLoadBalancingV2LoadBalancer"
  },
  {
    "ResourceName": "AWS::OpenSearch::Domain",
    "ListDescriber": "ParallelDescribeRegional(describer.OpenSearchDomain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_opensearch_domain",
    "Model": "OpenSearchDomain"
  },
  {
    "ResourceName": "AWS::RDS::DBEventSubscription",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBEventSubscription)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_event_subscription",
    "Model": "RDSDBEventSubscription"
  },
  {
    "ResourceName": "AWS::RDS::DBEngineVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBEngineVersion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_engine_version",
    "Model": "RDSDBEngineVersion"
  },
  {
    "ResourceName": "AWS::EC2::RegionalSettings",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2RegionalSettings)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_regional_settings",
    "Model": "EC2RegionalSettings"
  },
  {
    "ResourceName": "AWS::EC2::SecurityGroupRule",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2SecurityGroupRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_vpc_security_group_rule",
    "Model": "EC2SecurityGroupRule"
  },
  {
    "ResourceName": "AWS::EC2::TransitGatewayAttachment",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2TransitGatewayAttachment)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2TransitGatewayAttachment)",
    "SteampipeTable": "aws_ec2_transit_gateway_vpc_attachment",
    "Model": "EC2TransitGatewayAttachment"
  },
  {
    "ResourceName": "AWS::SES::Identity",
    "ListDescriber": "ParallelDescribeRegional(describer.SESIdentity)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ses_identity",
    "Model": "SESIdentity"
  },
  {
    "ResourceName": "AWS::SESv2::EmailIdentities",
    "ListDescriber": "ParallelDescribeRegional(describer.SESv2EmailIdentities)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sesv2_emailidentity",
    "Model": "SESv2EmailIdentity"
  },
  {
    "ResourceName": "AWS::WAF::Rule",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_waf_rule",
    "Model": "WAFRule"
  },
  {
    "ResourceName": "AWS::WAF::RuleGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRuleGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_waf_rule_group",
    "Model": "WAFRuleGroup"
  },
  {
    "ResourceName": "AWS::WAF::RateBasedRule",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRateBasedRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_waf_rate_based_rule",
    "Model": "WAFRateBasedRule"
  },
  {
    "ResourceName": "AWS::WAF::WebACL",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFWebACL)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_waf_web_acl",
    "Model": "WAFWebAcl"
  },
  {
    "ResourceName": "AWS::WAFRegional::WebACL",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFRegionalWebACL)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafregional_web_acl",
    "Model": "WAFRegionalWebAcl"
  },
  {
    "ResourceName": "AWS::WellArchitected::Workload",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedWorkload)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_workload",
    "Model": "WellArchitectedWorkload"
  },
  {
    "ResourceName": "AWS::WellArchitected::Answer",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedAnswer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_answer",
    "Model": "WellArchitectedAnswer"
  },
  {
    "ResourceName": "AWS::WellArchitected::CheckDetail",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedCheckDetail)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_check_detail",
    "Model": "WellArchitectedCheckDetail"
  },
  {
    "ResourceName": "AWS::WellArchitected::CheckSummary",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedCheckSummary)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_check_summary",
    "Model": "WellArchitectedCheckSummary"
  },
  {
    "ResourceName": "AWS::WellArchitected::ConsolidatedReport",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedConsolidatedReport)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_consolidated_report",
    "Model": "WellArchitectedCheckConsolidatedReport"
  },
  {
    "ResourceName": "AWS::WellArchitected::Lens",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedLens)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_lens",
    "Model": "WellArchitectedLens"
  },
  {
    "ResourceName": "AWS::WellArchitected::LensReview",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedLensReview)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_lens_review",
    "Model": "WellArchitectedLensReview"
  },
  {
    "ResourceName": "AWS::WellArchitected::LensReviewImprovement",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedLensReviewImprovement)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_lens_review_improvement",
    "Model": "WellArchitectedLensReviewImprovement"
  },
  {
    "ResourceName": "AWS::WellArchitected::LensReviewReport",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedLensReviewReport)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_lens_review_report",
    "Model": "WellArchitectedLensReviewReport"
  },
  {
    "ResourceName": "AWS::WellArchitected::LensShare",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedLensShare)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_lens_share",
    "Model": "WellArchitectedLensShare"
  },
  {
    "ResourceName": "AWS::WellArchitected::Milestone",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedMilestone)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_milestone",
    "Model": "WellArchitectedMilestone"
  },
  {
    "ResourceName": "AWS::WellArchitected::Notification",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedNotification)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_notification",
    "Model": "WellArchitectedNotification"
  },
  {
    "ResourceName": "AWS::WellArchitected::ShareInvitation",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedShareInvitation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_share_invitation",
    "Model": "WellArchitectedShareInvitation"
  },
  {
    "ResourceName": "AWS::WellArchitected::WorkloadShare",
    "ListDescriber": "ParallelDescribeRegional(describer.WellArchitectedWorkloadShare)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wellarchitected_workload_share",
    "Model": "WellArchitectedWorkloadShare"
  },
  {
    "ResourceName": "AWS::AutoScaling::LaunchConfiguration",
    "ListDescriber": "ParallelDescribeRegional(describer.AutoScalingLaunchConfiguration)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetAutoScalingLaunchConfiguration)",
    "SteampipeTable": "aws_ec2_launch_configuration",
    "Model": "AutoScalingLaunchConfiguration"
  },
  {
    "ResourceName": "AWS::CloudTrail::EventDataStore",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailEventDataStore)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudtrail_event_data_store",
    "Model": "CloudTrailEventDataStore"
  },
  {
    "ResourceName": "AWS::CodeDeploy::DeploymentGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeDeployDeploymentGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codedeploy_deployment_group",
    "Model": "CodeDeployDeploymentGroup"
  },
  {
    "ResourceName": "AWS::ImageBuilder::Image",
    "ListDescriber": "ParallelDescribeRegional(describer.ImageBuilderImage)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_imagebuilder_image",
    "Model": "ImageBuilderImage"
  },
  {
    "ResourceName": "AWS::Redshift::ClusterParameterGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftClusterParameterGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshift_parameter_group",
    "Model": "RedshiftClusterParameterGroup"
  },
  {
    "ResourceName": "AWS::Account::AlternateContact",
    "ListDescriber": "SequentialDescribeGlobal(describer.AccountAlternateContact)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_account_alternate_contact",
    "Model": "AccountAlternateContact"
  },
  {
    "ResourceName": "AWS::Inspector::AssessmentTarget",
    "ListDescriber": "ParallelDescribeRegional(describer.InspectorAssessmentTarget)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector_assessment_target",
    "Model": "InspectorAssessmentTarget"
  },
  {
    "ResourceName": "AWS::CloudFront::ResponseHeadersPolicy",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontResponseHeadersPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_response_headers_policy",
    "Model": "CloudFrontResponseHeadersPolicy"
  },
  {
    "ResourceName": "AWS::EC2::Instance",
    "Tags": {
      "category": ["Compute"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Ec2Instance.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Instance)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Instance)",
    "SteampipeTable": "aws_ec2_instance",
    "Model": "EC2Instance"
  },
  {
    "ResourceName": "AWS::EC2::InstanceMetricCpuUtilizationHourly",
    "Tags": {
      "category": ["Compute"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Ec2Instance.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.Ec2InstanceMetricCpuUtilizationHourly)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_instance_metric_cpu_utilization_hourly",
    "Model": "EC2InstanceMetricCpuUtilizationHourly"
  },
  {
    "ResourceName": "AWS::EC2::InstanceAvailability",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2InstanceAvailability)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_instance_availability",
    "Model": "EC2InstanceAvailability"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByRecordTypeDaily",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByRecordTypeLastDay)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_record_type_daily",
    "Model": "CostExplorerByRecordTypeDaily"
  },
  {
    "ResourceName": "AWS::EC2::ReservedInstances",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2ReservedInstances)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2ReservedInstances)",
    "SteampipeTable": "aws_ec2_reserved_instance",
    "Model": "EC2ReservedInstances"
  },
  {
    "ResourceName": "AWS::ECR::Repository",
    "Tags": {
      "category": ["Containers"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticContainerRegistry.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ECRRepository)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecr_repository",
    "Model": "ECRRepository"
  },
  {
    "ResourceName": "AWS::ECR::Registry",
    "Tags": {
      "category": ["Containers"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticContainerRegistry.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ECRRegistry)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecr_registry",
    "Model": "ECRRegistry"
  },
  {
    "ResourceName": "AWS::ECR::RegistryScanningConfiguration",
    "Tags": {
      "category": ["Containers"],
      "logo_uri": []
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ECRRegistryScanningConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecr_registry_scanning_configuration",
    "Model": "ECRRegistryScanningConfiguration"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancingV2::Listener",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingV2Listener)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetElasticLoadBalancingV2Listener)",
    "SteampipeTable": "aws_ec2_load_balancer_listener",
    "Model": "ElasticLoadBalancingV2Listener"
  },
  {
    "ResourceName": "AWS::IAM::Group",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_group",
    "Model": "IAMGroup"
  },
  {
    "ResourceName": "AWS::IAM::OpenIdConnectProvider",
    "ListDescriber": "SequentialDescribeGlobal(describer.IAMOpenIdConnectProvider)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetIAMOpenIdConnectProvider)",
    "SteampipeTable": "aws_iam_open_id_connect_provider",
    "Model": "IAMOpenIdConnectProvider"
  },
  {
    "ResourceName": "AWS::Backup::Plan",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupPlan)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_plan",
    "Model": "BackupPlan"
  },
  {
    "ResourceName": "AWS::Config::ConformancePack",
    "ListDescriber": "ParallelDescribeRegional(describer.ConfigConformancePack)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_config_conformance_pack",
    "Model": "ConfigConformancePack"
  },
  {
    "ResourceName": "AWS::Config::RetentionConfiguration",
    "ListDescriber": "ParallelDescribeRegional(describer.ConfigRetentionConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_config_retention_configuration",
    "Model": "ConfigRetentionConfiguration"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByAccountDaily",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByAccountLastDay)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_account_daily",
    "Model": "CostExplorerByAccountDaily"
  },
  {
    "ResourceName": "AWS::Account::Contact",
    "ListDescriber": "SequentialDescribeGlobal(describer.AccountContact)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_account_contact",
    "Model": "AccountContact"
  },
  {
    "ResourceName": "AWS::Glue::DataQualityRuleset",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueDataQualityRuleset)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_data_quality_ruleset",
    "Model": "GlueDataQualityRuleset"
  },
  {
    "ResourceName": "AWS::EventBridge::EventBus",
    "ListDescriber": "ParallelDescribeRegional(describer.EventBridgeBus)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eventbridge_bus",
    "Model": "EventBridgeBus"
  },
  {
    "ResourceName": "AWS::ApiGateway::Stage",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayStage)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayStage)",
    "SteampipeTable": "aws_api_gateway_stage",
    "Model": "ApiGatewayStage"
  },
  {
    "ResourceName": "AWS::ApiGatewayV2::Stage",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayV2Stage)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_api_gatewayv2_stage",
    "Model": "ApiGatewayV2Stage"
  },
  {
    "ResourceName": "AWS::DynamoDb::LocalSecondaryIndex",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbLocalSecondaryIndex)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodb_local_secondary_index",
    "Model": "DynamoDbLocalSecondaryIndex"
  },
  {
    "ResourceName": "AWS::ResourceGroups::Groups",
    "ListDescriber": "ParallelDescribeRegional(describer.ResourceGroups)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_resourcegroups_group",
    "Model": "ResourceGroupsGroup"
  },
  {
    "ResourceName": "AWS::Timestream::Database",
    "ListDescriber": "ParallelDescribeRegional(describer.TimestreamDatabase)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_timestream_database",
    "Model": "TimestreamDatabase"
  },
  {
    "ResourceName": "AWS::OpenSearchServerless::Collection",
    "ListDescriber": "ParallelDescribeRegional(describer.OpenSearchServerlessCollection)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_opensearchserverless_collection",
    "Model": "OpenSearchServerlessCollection"
  },
  {
    "ResourceName": "AWS::EC2::ElasticIP",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2ElasticIP)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_elasticip",
    "Model": "EC2ElasticIP"
  },
  {
    "ResourceName": "AWS::EC2::LocalGateway",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2LocalGateway)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_localgateway",
    "Model": "EC2LocalGateway"
  },
  {
    "ResourceName": "AWS::EC2::Image",
    "Tags": {
      "category": ["Compute"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Ec2AmiResource.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2AMI)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2AMI)",
    "SteampipeTable": "aws_ec2_ami",
    "Model": "EC2AMI"
  },
  {
    "ResourceName": "AWS::EC2::Subnet",
    "Tags": {
      "category": ["Networking"]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Subnet)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Subnet)",
    "SteampipeTable": "aws_vpc_subnet",
    "Model": "EC2Subnet"
  },
  {
    "ResourceName": "AWS::ECS::TaskSet",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSTaskSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecs_task_set",
    "Model": "ECSTaskSet"
  },
  {
    "ResourceName": "AWS::Kinesis::Stream",
    "ListDescriber": "ParallelDescribeRegional(describer.KinesisStream)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kinesis_stream",
    "Model": "KinesisStream"
  },
  {
    "ResourceName": "AWS::Kinesis::Consumer",
    "ListDescriber": "ParallelDescribeRegional(describer.KinesisConsumer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kinesis_consumer",
    "Model": "KinesisConsumer"
  },
  {
    "ResourceName": "AWS::DocDB::Cluster",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/DocumentDb.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.DocDBCluster)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetDocDBCluster)",
    "SteampipeTable": "aws_docdb_cluster",
    "Model": "DocDBCluster"
  },
  {
    "ResourceName": "AWS::DocDB::ClusterSnapshot",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/DocumentDb.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.DocDBClusterSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_docdb_cluster_snapshot",
    "Model": "DocDBClusterSnapshot"
  },
  {
    "ResourceName": "AWS::DocDB::ClusterInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.DocDBClusterInstance)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetDocDBClusterInstance)",
    "SteampipeTable": "aws_docdb_cluster_instance",
    "Model": "DocDBClusterInstance"
  },
  {
    "ResourceName": "AWS::ElastiCache::ReplicationGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.ElastiCacheReplicationGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_elasticache_replication_group",
    "Model": "ElastiCacheReplicationGroup"
  },
  {
    "ResourceName": "AWS::GlobalAccelerator::Accelerator",
    "ListDescriber": "ParallelDescribeRegional(describer.GlobalAcceleratorAccelerator)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_globalaccelerator_accelerator",
    "Model": "GlobalAcceleratorAccelerator"
  },
  {
    "ResourceName": "AWS::CloudWatch::Metric",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchMetrics)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudwatch_metric",
    "Model": "CloudWatchMetric"
  },
  {
    "ResourceName": "AWS::CostExplorer::ForcastMonthly",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostForecastMonthly)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_forecast_monthly",
    "Model": "CostExplorerForcastMonthly"
  },
  {
    "ResourceName": "AWS::EMR::InstanceGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.EMRInstanceGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_emr_instance_group",
    "Model": "EMRInstanceGroup"
  },
  {
    "ResourceName": "AWS::EC2::ManagedPrefixList",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2ManagedPrefixList)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2ManagedPrefixList)",
    "SteampipeTable": "aws_ec2_managed_prefix_list",
    "Model": "EC2ManagedPrefixList"
  },
  {
    "ResourceName": "AWS::EC2::ManagedPrefixListEntry",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2ManagedPrefixListEntry)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_managed_prefix_list_entry",
    "Model": "EC2ManagedPrefixListEntry"
  },
  {
    "ResourceName": "AWS::EC2::ClientVpnEndpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2ClientVpnEndpoint)",
    "GetDescriber": "",
    "SteampipeTable": "aws_ec2_client_vpn_endpoint",
    "Model": "EC2ClientVpnEndpoint"
  },
  {
    "ResourceName": "AWS::MWAA::Environment",
    "ListDescriber": "ParallelDescribeRegional(describer.MWAAEnvironment)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_mwaa_environment",
    "Model": "MWAAEnvironment"
  },
  {
    "ResourceName": "AWS::CloudWatch::LogResourcePolicy",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchLogsResourcePolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudwatch_log_resource_policy",
    "Model": "CloudWatchLogResourcePolicy"
  },
  {
    "ResourceName": "AWS::CodeArtifact::Domain",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeArtifactDomain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codeartifact_domain",
    "Model": "CodeArtifactDomain"
  },
  {
    "ResourceName": "AWS::CodeStar::Project",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeStarProject)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codestar_project",
    "Model": "CodeStarProject"
  },
  {
    "ResourceName": "AWS::Neptune::Database",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Neptune.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.NeptuneDatabase)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_neptune_database",
    "Model": "NeptuneDatabase"
  },
  {
    "ResourceName": "AWS::Neptune::DBCluster",
    "ListDescriber": "ParallelDescribeRegional(describer.NeptuneDatabaseCluster)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_neptune_db_cluster",
    "Model": "NeptuneDatabaseCluster"
  },
  {
    "ResourceName": "AWS::Neptune::DBClusterSnapshot",
    "ListDescriber": "ParallelDescribeRegional(describer.NeptuneDatabaseClusterSnapshot)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_neptune_db_cluster_snapshot",
    "Model": "NeptuneDatabaseClusterSnapshot"
  },
  {
    "ResourceName": "AWS::NetworkFirewall::FirewallPolicy",
    "ListDescriber": "ParallelDescribeRegional(describer.NetworkFirewallPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_networkfirewall_firewall_policy",
    "Model": "NetworkFirewallFirewallPolicy"
  },
  {
    "ResourceName": "AWS::NetworkFirewall::RuleGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.NetworkFirewallRuleGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_networkfirewall_rule_group",
    "Model": "NetworkFirewallRuleGroup"
  },
  {
    "ResourceName": "AWS::Oam::Link",
    "ListDescriber": "ParallelDescribeRegional(describer.OAMLink)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_oam_link",
    "Model": "OAMLink"
  },
  {
    "ResourceName": "AWS::Oam::Sink",
    "ListDescriber": "ParallelDescribeRegional(describer.OAMSink)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_oam_sink",
    "Model": "OAMSink"
  },
  {
    "ResourceName": "AWS::Organizations::Account",
    "ListDescriber": "ParallelDescribeRegional(describer.OrganizationsAccount)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_organizations_account",
    "Model": "OrganizationsAccount"
  },
  {
    "ResourceName": "AWS::Pinpoint::App",
    "ListDescriber": "ParallelDescribeRegional(describer.PinpointApp)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_pinpoint_app",
    "Model": "PinPointApp"
  },
  {
    "ResourceName": "AWS::Pipes::Pipe",
    "ListDescriber": "ParallelDescribeRegional(describer.PipesPipe)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_pipes_pipe",
    "Model": "PipesPipe"
  },
  {
    "ResourceName": "AWS::RDS::DBClusterParameterGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBClusterParameterGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_cluster_parameter_group",
    "Model": "RDSDBClusterParameterGroup"
  },
  {
    "ResourceName": "AWS::RDS::OptionGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSOptionGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_option_group",
    "Model": "RDSOptionGroup"
  },
  {
    "ResourceName": "AWS::RDS::DBParameterGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBParameterGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_parameter_group",
    "Model": "RDSDBParameterGroup"
  },
  {
    "ResourceName": "AWS::RDS::DBProxy",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBProxy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_proxy",
    "Model": "RDSDBProxy"
  },
  {
    "ResourceName": "AWS::RDS::DBSubnetGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBSubnetGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_subnet_group",
    "Model": "RDSDBSubnetGroup"
  },
  {
    "ResourceName": "AWS::RDS::DBRecommendation",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSDBRecommendation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_db_recommendation",
    "Model": "RDSDBRecommendation"
  },
  {
    "ResourceName": "AWS::Redshift::EventSubscription",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftEventSubscription)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshift_event_subscription",
    "Model": "RedshiftEventSubscription"
  },
  {
    "ResourceName": "AWS::RedshiftServerless::Workgroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftServerlessWorkgroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshiftserverless_workgroup",
    "Model": "RedshiftServerlessWorkgroup"
  },
  {
    "ResourceName": "AWS::ResourceExplorer2::Index",
    "ListDescriber": "ParallelDescribeRegional(describer.ResourceExplorerIndex)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_resource_explorer_index",
    "Model": "ResourceExplorer2Index"
  },
  {
    "ResourceName": "AWS::Route53::HealthCheck",
    "ListDescriber": "ParallelDescribeRegional(describer.Route53HealthCheck)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_health_check",
    "Model": "Route53HealthCheck"
  },
  {
    "ResourceName": "AWS::Route53Resolver::ResolverRule",
    "ListDescriber": "ParallelDescribeRegional(describer.Route53ResolverResolverRule)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_resolver_rule",
    "Model": "Route53ResolverResolverRule"
  },
  {
    "ResourceName": "AWS::Route53Resolver::QueryLogConfig",
    "ListDescriber": "ParallelDescribeRegional(describer.Route53ResolverQueryLogConfig)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetRoute53ResolverQueryLogConfig)",
    "SteampipeTable": "aws_route53_resolver_query_log_config",
    "Model": "Route53ResolverQueryLogConfig"
  },
  {
    "ResourceName": "AWS::SageMaker::App",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerApp)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_app",
    "Model": "SageMakerApp"
  },
  {
    "ResourceName": "AWS::SageMaker::Domain",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerDomain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_domain",
    "Model": "SageMakerDomain"
  },
  {
    "ResourceName": "AWS::StepFunctions::StateMachine",
    "ListDescriber": "ParallelDescribeRegional(describer.StepFunctionsStateMachine)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sfn_state_machine",
    "Model": "StepFunctionsStateMachine"
  },
  {
    "ResourceName": "AWS::StepFunctions::StateMachineExecution",
    "ListDescriber": "ParallelDescribeRegional(describer.StepFunctionsStateMachineExecution)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sfn_state_machine_execution",
    "Model": "StepFunctionsStateMachineExecution"
  },
  {
    "ResourceName": "AWS::StepFunctions::StateMachineExecutionHistories",
    "ListDescriber": "ParallelDescribeRegional(describer.StepFunctionsStateMachineExecutionHistories)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sfn_state_machine_execution_history",
    "Model": "StepFunctionsStateMachineExecutionHistories"
  },
  {
    "ResourceName": "AWS::SimSpaceWeaver::Simulation",
    "ListDescriber": "ParallelDescribeRegional(describer.SimSpaceWeaverSimulation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_simspaceweaver_simulation",
    "Model": "SimSpaceWeaverSimulation"
  },
  {
    "ResourceName": "AWS::SSM::Association",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMAssociation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_association",
    "Model": "SSMAssociation"
  },
  {
    "ResourceName": "AWS::SSM::Document",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMDocument)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_document",
    "Model": "SSMDocument"
  },
  {
    "ResourceName": "AWS::SSM::DocumentPermission",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMDocumentPermission)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ssm_document_permission",
    "Model": "SSMDocumentPermission"
  },
  {
    "ResourceName": "AWS::EC2::CustomerGateway",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/VpcCustomerGateway.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2CustomerGateway)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2CustomerGateway)",
    "SteampipeTable": "aws_vpc_customer_gateway",
    "Model": "EC2CustomerGateway"
  },
  {
    "ResourceName": "AWS::EC2::VerifiedAccessInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VerifiedAccessInstance)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VerifiedAccessInstance)",
    "SteampipeTable": "aws_vpc_verified_access_instance",
    "Model": "EC2VerifiedAccessInstance"
  },
  {
    "ResourceName": "AWS::EC2::VerifiedAccessEndpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VerifiedAccessEndpoint)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VerifiedAccessEndpoint)",
    "SteampipeTable": "aws_vpc_verified_access_endpoint",
    "Model": "EC2VerifiedAccessEndpoint"
  },
  {
    "ResourceName": "AWS::EC2::VerifiedAccessGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VerifiedAccessGroup)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VerifiedAccessGroup)",
    "SteampipeTable": "aws_vpc_verified_access_group",
    "Model": "EC2VerifiedAccessGroup"
  },
  {
    "ResourceName": "AWS::EC2::VerifiedAccessTrustProvider",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VerifiedAccessTrustProvider)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VerifiedAccessTrustProvider)",
    "SteampipeTable": "aws_vpc_verified_access_trust_provider",
    "Model": "EC2VerifiedAccessTrustProvider"
  },
  {
    "ResourceName": "AWS::EC2::VPNGateway",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/VpcVpnGateway.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPNGateway)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VPNGateway)",
    "SteampipeTable": "aws_vpc_vpn_gateway",
    "Model": "EC2VPNGateway"
  },
  {
    "ResourceName": "AWS::WAFv2::IPSet",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFv2IPSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafv2_ip_set",
    "Model": "WAFv2IPSet"
  },
  {
    "ResourceName": "AWS::WAFv2::RegexPatternSet",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFv2RegexPatternSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafv2_regex_pattern_set",
    "Model": "WAFv2RegexPatternSet"
  },
  {
    "ResourceName": "AWS::WAFv2::RuleGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.WAFv2RuleGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_wafv2_rule_group",
    "Model": "WAFv2RuleGroup"
  },
  {
    "ResourceName": "AWS::EC2::TransitGatewayRoute",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2TransitGatewayRoute)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2TransitGatewayRoute)",
    "SteampipeTable": "aws_ec2_transit_gateway_route",
    "Model": "EC2TransitGatewayRoute"
  },
  {
    "ResourceName": "AWS::GuardDuty::Filter",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyFilter)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_filter",
    "Model": "GuardDutyFilter"
  },
  {
    "ResourceName": "AWS::ECS::TaskDefinition",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSTaskDefinition)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetECSTaskDefinition)",
    "SteampipeTable": "aws_ecs_task_definition",
    "Model": "ECSTaskDefinition"
  },
  {
    "ResourceName": "AWS::GuardDuty::ThreatIntelSet",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyThreatIntelSet)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_threat_intel_set",
    "Model": "GuardDutyThreatIntelSet"
  },
  {
    "ResourceName": "AWS::ApiGatewayV2::DomainName",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayV2DomainName)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayV2DomainName)",
    "SteampipeTable": "aws_api_gatewayv2_domain_name",
    "Model": "ApiGatewayV2DomainName"
  },
  {
    "ResourceName": "AWS::ApiGateway::DomainName",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayDomainName)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetApiGatewayDomainName)",
    "SteampipeTable": "aws_api_gateway_domain_name",
    "Model": "ApiGatewayDomainName"
  },
  {
    "ResourceName": "AWS::ApiGatewayV2::Route",
    "ListDescriber": "ParallelDescribeRegional(describer.ApiGatewayV2Route)",
    "GetDescriber": "",
    "SteampipeTable": "aws_api_gatewayv2_route",
    "Model": "ApiGatewayV2Route"
  },
  {
    "ResourceName": "AWS::MQ::Broker",
    "ListDescriber": "ParallelDescribeRegional(describer.MQBroker)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_mq_broker",
    "Model": "MQBroker"
  },
  {
    "ResourceName": "AWS::ACMPCA::CertificateAuthority",
    "ListDescriber": "ParallelDescribeRegional(describer.ACMPCACertificateAuthority)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_acmpca_certificate_authority",
    "Model": "ACMPCACertificateAuthority"
  },
  {
    "ResourceName": "AWS::CloudFormation::Stack",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudFormationStack)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetCloudFormationStack)",
    "SteampipeTable": "aws_cloudformation_stack",
    "Model": "CloudFormationStack"
  },
  {
    "ResourceName": "AWS::CloudFormation::StackResource",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudFormationStackResource)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetCloudFormationStackResource)",
    "SteampipeTable": "aws_cloudformation_stack_resource",
    "Model": "CloudFormationStackResource"
  },
  {
    "ResourceName": "AWS::DirectConnect::Connection",
    "ListDescriber": "ParallelDescribeRegional(describer.DirectConnectConnection)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_directconnect_connection",
    "Model": "DirectConnectConnection"
  },
  {
    "ResourceName": "AWS::FSX::FileSystem",
    "ListDescriber": "ParallelDescribeRegional(describer.FSXFileSystem)",
    "GetDescriber": "nil",
    "TerraformName": [
      "aws_fsx_ontap_file_system",
      "aws_fsx_openzfs_file_system"
    ],
    "SteampipeTable": "aws_fsx_file_system",
    "Model": "FSXFileSystem"
  },
  {
    "ResourceName": "AWS::Glue::SecurityConfiguration",
    "ListDescriber": "ParallelDescribeRegional(describer.GlueSecurityConfiguration)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_glue_security_configuration",
    "Model": "GlueSecurityConfiguration"
  },
  {
    "ResourceName": "AWS::Inspector::AssessmentRun",
    "ListDescriber": "ParallelDescribeRegional(describer.InspectorAssessmentRun)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector_assessment_run",
    "Model": "InspectorAssessmentRun"
  },
  {
    "ResourceName": "AWS::Inspector2::Coverage",
    "ListDescriber": "ParallelDescribeRegional(describer.Inspector2Coverage)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector2_coverage",
    "Model": "Inspector2Coverage"
  },
  {
    "ResourceName": "AWS::Inspector2::CoverageStatistics",
    "ListDescriber": "ParallelDescribeRegional(describer.Inspector2CoverageStatistic)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector2_coverage_statistics",
    "Model": "Inspector2CoverageStatistic"
  },
  {
    "ResourceName": "AWS::Inspector2::Member",
    "ListDescriber": "ParallelDescribeRegional(describer.Inspector2CoverageMember)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector2_member",
    "Model": "Inspector2Member"
  },
  {
    "ResourceName": "AWS::Inspector2::Finding",
    "ListDescriber": "ParallelDescribeRegional(describer.Inspector2Finding)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_inspector2_finding",
    "Model": "Inspector2Finding"
  },
  {
    "ResourceName": "AWS::Config::ConfigurationRecorder",
    "ListDescriber": "ParallelDescribeRegional(describer.ConfigConfigurationRecorder)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_config_configuration_recorder",
    "Model": "ConfigConfigurationRecorder"
  },
  {
    "ResourceName": "AWS::EC2::NatGateway",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/VpcNatGateway.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2NatGateway)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2NatGateway)",
    "SteampipeTable": "aws_vpc_nat_gateway",
    "Model": "EC2NatGateway"
  },
  {
    "ResourceName": "AWS::ECR::PublicRepository",
    "ListDescriber": "ParallelDescribeRegional(describer.ECRPublicRepository)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ecrpublic_repository",
    "Model": "ECRPublicRepository"
  },
  {
    "ResourceName": "AWS::ECS::Cluster",
    "ListDescriber": "ParallelDescribeRegional(describer.ECSCluster)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetECSCluster)",
    "SteampipeTable": "aws_ecs_cluster",
    "Model": "ECSCluster"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancingV2::TargetGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingV2TargetGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_target_group",
    "Model": "ElasticLoadBalancingV2TargetGroup"
  },
  {
    "ResourceName": "AWS::CloudFront::CachePolicy",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontCachePolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_cache_policy",
    "Model": "CloudFrontCachePolicy"
  },
  {
    "ResourceName": "AWS::CodeArtifact::Repository",
    "ListDescriber": "ParallelDescribeRegional(describer.CodeArtifactRepository)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_codeartifact_repository",
    "Model": "CodeArtifactRepository"
  },
  {
    "ResourceName": "AWS::AMP::Workspace",
    "ListDescriber": "ParallelDescribeRegional(describer.AMPWorkspace)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_amp_workspace",
    "Model": "AMPWorkspace"
  },
  {
    "ResourceName": "AWS::EC2::CapacityReservation",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2CapacityReservation)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2CapacityReservation)",
    "SteampipeTable": "aws_ec2_capacity_reservation",
    "Model": "EC2CapacityReservation"
  },
  {
    "ResourceName": "AWS::SageMaker::NotebookInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerNotebookInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_notebook_instance",
    "Model": "SageMakerNotebookInstance"
  },
  {
    "ResourceName": "AWS::IAM::AccessAdvisor",
    "ListDescriber": "ParallelDescribeRegional(describer.IAMAccessAdvisor)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_iam_access_advisor",
    "Model": "IAMAccessAdvisor"
  },
  {
    "ResourceName": "AWS::EC2::VolumeSnapshot",
    "Tags": {
      "category": ["Storage"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticBlockStoreSnapshot.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VolumeSnapshot)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VolumeSnapshot)",
    "SteampipeTable": "aws_ebs_snapshot",
    "Model": "EC2VolumeSnapshot"
  },
  {
    "ResourceName": "AWS::EC2::Region",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Region)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_region",
    "Model": "EC2Region"
  },
  {
    "ResourceName": "AWS::Keyspaces::Table",
    "ListDescriber": "ParallelDescribeRegional(describer.KeyspacesTable)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_keyspaces_table",
    "Model": "KeyspacesTable"
  },
  {
    "ResourceName": "AWS::Config::AggregationAuthorization",
    "ListDescriber": "ParallelDescribeRegional(describer.ConfigAggregateAuthorization)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_config_aggregate_authorization",
    "Model": "ConfigAggregationAuthorization"
  },
  {
    "ResourceName": "AWS::DAX::SubnetGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.DAXSubnetGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dax_subnet_group",
    "Model": "DAXSubnetGroup"
  },
  {
    "ResourceName": "AWS::DynamoDb::GlobalTable",
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbGlobalTable)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodb_global_table",
    "Model": "DynamoDbGlobalTable"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancing::LoadBalancer",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/ElasticLoadBalancingClassicLoadBalancer.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingLoadBalancer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_classic_load_balancer",
    "Model": "ElasticLoadBalancingLoadBalancer"
  },
  {
    "ResourceName": "AWS::AppStream::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.AppStreamApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_appstream_application",
    "Model": "AppStreamApplication"
  },
  {
    "ResourceName": "AWS::RedshiftServerless::Namespace",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftServerlessNamespace)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshiftserverless_namespace",
    "Model": "RedshiftServerlessNamespace"
  },
  {
    "ResourceName": "AWS::CloudFront::OriginAccessIdentity",
    "ListDescriber": "SequentialDescribeGlobal(describer.CloudFrontOriginAccessIdentity)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudfront_origin_access_identity",
    "Model": "CloudFrontOriginAccessIdentity"
  },
  {
    "ResourceName": "AWS::EC2::Host",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2Host)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2Host)",
    "SteampipeTable": "aws_ec2_host",
    "Model": "EC2Host"
  },
  {
    "ResourceName": "AWS::EC2::VPC",
    "Tags": {
      "category": ["Networking"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/Vpc.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPC)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2VPC)",
    "SteampipeTable": "aws_vpc",
    "Model": "EC2Vpc"
  },
  {
    "ResourceName": "AWS::EC2::TransitGatewayRouteTable",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2TransitGatewayRouteTable)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2TransitGatewayRouteTable)",
    "SteampipeTable": "aws_ec2_transit_gateway_route_table",
    "Model": "EC2TransitGatewayRouteTable"
  },
  {
    "ResourceName": "AWS::EKS::Nodegroup",
    "ListDescriber": "ParallelDescribeRegional(describer.EKSNodegroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_eks_node_group",
    "Model": "EKSNodegroup"
  },
  {
    "ResourceName": "AWS::Backup::Selection",
    "ListDescriber": "ParallelDescribeRegional(describer.BackupSelection)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_backup_selection",
    "Model": "BackupSelection"
  },
  {
    "ResourceName": "AWS::CloudTrail::Import",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailImport)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cloudtrail_import",
    "Model": "CloudTrailImport"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByServiceDaily",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByServiceLastDay)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_cost_by_service_daily",
    "Model": "CostExplorerByServiceDaily"
  },
  {
    "ResourceName": "AWS::ElasticLoadBalancingV2::SslPolicy",
    "ListDescriber": "ParallelDescribeRegional(describer.ElasticLoadBalancingV2SslPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_ssl_policy",
    "Model": "ElasticLoadBalancingV2SslPolicy"
  },
  {
    "ResourceName": "AWS::GuardDuty::Finding",
    "ListDescriber": "ParallelDescribeRegional(describer.GuardDutyFinding)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_guardduty_finding",
    "Model": "GuardDutyFinding"
  },
  {
    "ResourceName": "AWS::EC2::DHCPOptions",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2DHCPOptions)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2DHCPOptions)",
    "SteampipeTable": "aws_vpc_dhcp_options",
    "Model": "EC2DhcpOptions"
  },
  {
    "ResourceName": "AWS::EC2::InstanceType",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2InstanceType)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ec2_instance_type",
    "Model": "EC2InstanceType"
  },
  {
    "ResourceName": "AWS::Batch::ComputeEnvironment",
    "ListDescriber": "ParallelDescribeRegional(describer.BatchComputeEnvironment)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetBatchComputeEnvironment)",
    "SteampipeTable": "aws_batch_compute_environment",
    "Model": "BatchComputeEnvironment"
  },
  {
    "ResourceName": "AWS::DMS::ReplicationInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.DMSReplicationInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dms_replication_instance",
    "Model": "DMSReplicationInstance"
  },
  {
    "ResourceName": "AWS::DMS::Endpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.DMSEndpoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dms_endpoint",
    "Model": "DMSEndpoint"
  },
  {
    "ResourceName": "AWS::DMS::ReplicationTask",
    "ListDescriber": "ParallelDescribeRegional(describer.DMSReplicationTask)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dms_replication_task",
    "Model": "DMSReplicationTask"
  },
  {
    "ResourceName": "AWS::DynamoDb::Table",
    "Tags": {
      "category": ["Database"],
      "logo_uri": [
        "https://raw.githubusercontent.com/kaytu-io/awsicons/master/svg-export/icons/DynamoDbTable.svg"
      ]
    },
    "ListDescriber": "ParallelDescribeRegional(describer.DynamoDbTable)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_dynamodb_table",
    "Model": "DynamoDbTable"
  },
  {
    "ResourceName": "AWS::Shield::ProtectionGroup",
    "ListDescriber": "SequentialDescribeGlobal(describer.ShieldProtectionGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_shield_protection_group",
    "Model": "ShieldProtectionGroup"
  },
  {
    "ResourceName": "AWS::Firehose::DeliveryStream",
    "ListDescriber": "ParallelDescribeRegional(describer.FirehoseDeliveryStream)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kinesis_firehose_delivery_stream",
    "Model": "FirehoseDeliveryStream"
  },
  {
    "ResourceName": "AWS::KinesisVideo::Stream",
    "ListDescriber": "ParallelDescribeRegional(describer.KinesisVideoStream)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kinesis_video_stream",
    "Model": "KinesisVideoStream"
  },
  {
    "ResourceName": "AWS::KMS::Alias",
    "ListDescriber": "ParallelDescribeRegional(describer.KMSAlias)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_kms_alias",
    "Model": "KMSAlias"
  },
  {
    "ResourceName": "AWS::Lambda::Alias",
    "ListDescriber": "ParallelDescribeRegional(describer.LambdaAlias)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_lambda_alias",
    "Model": "LambdaAlias"
  },
  {
    "ResourceName": "AWS::Lambda::LambdaLayer",
    "ListDescriber": "ParallelDescribeRegional(describer.LambdaLayer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_lambda_layer",
    "Model": "LambdaLayer"
  },
  {
    "ResourceName": "AWS::Lambda::LayerVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.LambdaLayerVersion)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_lambda_layer_version",
    "Model": "LambdaLayerVersion"
  },
  {
    "ResourceName": "AWS::Lightsail::Instance",
    "ListDescriber": "ParallelDescribeRegional(describer.LightsailInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_lightsail_instance",
    "Model": "LightsailInstance"
  },
  {
    "ResourceName": "AWS::Macie2::ClassificationJob",
    "ListDescriber": "ParallelDescribeRegional(describer.Macie2ClassificationJob)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_macie2_classification_job",
    "Model": "Macie2ClassificationJob"
  },
  {
    "ResourceName": "AWS::MediaStore::Container",
    "ListDescriber": "ParallelDescribeRegional(describer.MediaStoreContainer)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_media_store_container",
    "Model": "MediaStoreContainer"
  },
  {
    "ResourceName": "AWS::Mgn::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.MGNApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_mgn_application",
    "Model": "MgnApplication"
  },
  {
    "ResourceName": "AWS::ResourceExplorer2::SupportedResourceType",
    "ListDescriber": "ParallelDescribeRegional(describer.ResourceExplorer2SupportedResourceType)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_resource_explorer_supported_resource_type",
    "Model": "ResourceExplorer2SupportedResourceType"
  },
  {
    "ResourceName": "AWS::Route53Resolver::ResolverEndpoint",
    "ListDescriber": "ParallelDescribeRegional(describer.Route53ResolverResolverEndpoint)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_resolver_endpoint",
    "Model": "Route53ResolverEndpoint"
  },
  {
    "ResourceName": "AWS::Route53Domains::Domain",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53Domain)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_domain",
    "Model": "Route53Domain"
  },
  {
    "ResourceName": "AWS::Route53::Record",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53Record)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_record",
    "Model": "Route53Record"
  },
  {
    "ResourceName": "AWS::Route53::TrafficPolicy",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53TrafficPolicy)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_traffic_policy",
    "Model": "Route53TrafficPolicy"
  },
  {
    "ResourceName": "AWS::Route53::TrafficPolicyInstance",
    "ListDescriber": "SequentialDescribeGlobal(describer.Route53TrafficPolicyInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_route53_traffic_policy_instance",
    "Model": "Route53TrafficPolicyInstance"
  },
  {
    "ResourceName": "AWS::SageMaker::Model",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerModel)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_model",
    "Model": "SageMakerModel"
  },
  {
    "ResourceName": "AWS::SageMaker::TrainingJob",
    "ListDescriber": "ParallelDescribeRegional(describer.SageMakerTrainingJob)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_sagemaker_training_job",
    "Model": "SageMakerTrainingJob"
  },
  {
    "ResourceName": "AWS::SecurityHub::ActionTarget",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubActionTarget)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_action_target",
    "Model": "SecurityHubActionTarget"
  },
  {
    "ResourceName": "AWS::SecurityHub::Finding",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubFinding)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_finding",
    "Model": "SecurityHubFinding"
  },
  {
    "ResourceName": "AWS::SecurityHub::FindingAggregator",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubFindingAggregator)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_finding_aggregator",
    "Model": "SecurityHubFindingAggregator"
  },
  {
    "ResourceName": "AWS::SecurityHub::Insight",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubInsight)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_insight",
    "Model": "SecurityHubInsight"
  },
  {
    "ResourceName": "AWS::SecurityHub::Member",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubMember)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_member",
    "Model": "SecurityHubMember"
  },
  {
    "ResourceName": "AWS::SecurityHub::Product",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubProduct)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_product",
    "Model": "SecurityHubProduct"
  },
  {
    "ResourceName": "AWS::SecurityHub::StandardsControl",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubStandardsControl)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_standards_control",
    "Model": "SecurityHubStandardsControl"
  },
  {
    "ResourceName": "AWS::SecurityHub::StandardsSubscription",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityHubStandardsSubscription)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securityhub_standards_subscription",
    "Model": "SecurityHubStandardsSubscription"
  },
  {
    "ResourceName": "AWS::SecurityLake::DataLake",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityLakeDataLake)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securitylake_data_lake",
    "Model": "SecurityLakeDataLake"
  },
  {
    "ResourceName": "AWS::SecurityLake::Subscriber",
    "ListDescriber": "ParallelDescribeRegional(describer.SecurityLakeSubscriber)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_securitylake_subscriber",
    "Model": "SecurityLakeSubscriber"
  },
  {
    "ResourceName": "AWS::Ram::PrincipalAssociation",
    "ListDescriber": "ParallelDescribeRegional(describer.RamPrincipalAssociation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ram_principal_association",
    "Model": "RamPrincipalAssociation"
  },
  {
    "ResourceName": "AWS::Ram::ResourceAssociation",
    "ListDescriber": "ParallelDescribeRegional(describer.RamResourceAssociation)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_ram_resource_association",
    "Model": "RamResourceAssociation"
  },
  {
    "ResourceName": "AWS::RDS::ReservedDBInstance",
    "ListDescriber": "ParallelDescribeRegional(describer.RDSReservedDBInstance)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_rds_reserved_db_instance",
    "Model": "RDSReservedDBInstance"
  },
  {
    "ResourceName": "AWS::Redshift::SubnetGroup",
    "ListDescriber": "ParallelDescribeRegional(describer.RedshiftSubnetGroup)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_redshift_subnet_group",
    "Model": "RedshiftSubnetGroup"
  },
  {
    "ResourceName": "AWS::SeverlessApplicationRepository::Application",
    "ListDescriber": "ParallelDescribeRegional(describer.ServerlessApplicationRepositoryApplication)",
    "GetDescriber": "nil",
    "SteampipeTable": "aws_serverlessapplicationrepository_application",
    "Model": "ServerlessApplicationRepositoryApplication"
  },
  {
    "ResourceName": "AWS::AuditManager::Framework",
    "ListDescriber": "ParallelDescribeRegional(describer.AuditManagerFramework)",
    "GetDescriber": null,
    "SteampipeTable": "aws_auditmanager_framework",
    "Model": "AuditManagerFramework"
  },
  {
    "ResourceName": "AWS::AuditManager::EvidenceFolder",
    "ListDescriber": "ParallelDescribeRegional(describer.AuditManagerEvidenceFolder)",
    "GetDescriber": null,
    "SteampipeTable": "aws_auditmanager_evidence_folder",
    "Model": "AuditManagerEvidenceFolder"
  },
  {
    "ResourceName": "AWS::AuditManager::Evidence",
    "ListDescriber": "ParallelDescribeRegional(describer.AuditManagerEvidence)",
    "GetDescriber": null,
    "SteampipeTable": "aws_auditmanager_evidence",
    "Model": "AuditManagerEvidence"
  },
  {
    "ResourceName": "AWS::AuditManager::Control",
    "ListDescriber": "ParallelDescribeRegional(describer.AuditManagerControl)",
    "GetDescriber": null,
    "SteampipeTable": "aws_auditmanager_control",
    "Model": "AuditManagerControl"
  },
  {
    "ResourceName": "AWS::AuditManager::Assessment",
    "ListDescriber": "ParallelDescribeRegional(describer.AuditManagerAssessment)",
    "GetDescriber": null,
    "SteampipeTable": "aws_auditmanager_assessment",
    "Model": "AuditManagerAssessment"
  },
  {
    "ResourceName": "AWS::CloudTrail::TrailEvent",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudTrailTrailEvent)",
    "GetDescriber": null,
    "SteampipeTable": "aws_cloudtrail_trail_event",
    "Model": "CloudTrailTrailEvent"
  },
  {
    "ResourceName": "AWS::CloudWatch::LogEvent",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchLogEvent)",
    "GetDescriber": null,
    "SteampipeTable": "aws_cloudwatch_log_event",
    "Model": "CloudWatchLogEvent"
  },
  {
    "ResourceName": "AWS::Logs::MetricFilter",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchLogsMetricFilter)",
    "GetDescriber": null,
    "SteampipeTable": "aws_cloudwatch_log_metric_filter",
    "Model": "CloudWatchLogsMetricFilter"
  },
  {
    "ResourceName": "AWS::CloudWatch::LogStream",
    "ListDescriber": "ParallelDescribeRegional(describer.CloudWatchLogStream)",
    "GetDescriber": null,
    "SteampipeTable": "aws_cloudwatch_log_stream",
    "Model": "CloudWatchLogStream"
  },
  {
    "ResourceName": "AWS::CostExplorer::ByUsageTypeMonthly",
    "ListDescriber": "SequentialDescribeGlobal(describer.CostByServiceUsageLastMonth)",
    "GetDescriber": null,
    "SteampipeTable": "aws_cost_by_service_usage_type_monthly",
    "Model": "CostExplorerByServiceUsageTypeMonthly"
  },
  {
    "ResourceName": "AWS::ServiceQuotas::ServiceQuotaChangeRequest",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceQuotasServiceQuotaChangeRequest)",
    "GetDescriber": null,
    "SteampipeTable": "aws_servicequotas_service_quota_change_request",
    "Model": "ServiceQuotasServiceQuotaChangeRequest"
  },
  {
    "ResourceName": "AWS::ServiceQuotas::Service",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceQuotasService)",
    "GetDescriber": null,
    "SteampipeTable": "aws_servicequotas_service",
    "Model": "ServiceQuotasService"
  },
  {
    "ResourceName": "AWS::EC2::VPCEndpointService",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2VPCEndpointService)",
    "GetDescriber": null,
    "SteampipeTable": "aws_vpc_endpoint_service",
    "Model": "EC2VPCEndpointService"
  },
  {
    "ResourceName": "AWS::EC2::LaunchTemplate",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2LaunchTemplate)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2LaunchTemplate)",
    "SteampipeTable": "aws_ec2_launch_template",
    "Model": "EC2LaunchTemplate"
  },
  {
    "ResourceName": "AWS::EC2::LaunchTemplateVersion",
    "ListDescriber": "ParallelDescribeRegional(describer.EC2LaunchTemplateVersion)",
    "GetDescriber": "ParallelDescribeRegionalSingleResource(describer.GetEC2LaunchTemplateVersion)",
    "SteampipeTable": "aws_ec2_launch_template_version",
    "Model": "EC2LaunchTemplateVersion"
  },
  {
    "ResourceName": "AWS::SNS::Subscription",
    "ListDescriber": "ParallelDescribeRegional(describer.SNSSubscription)",
    "GetDescriber": null,
    "SteampipeTable": "aws_sns_topic_subscription",
    "Model": "SNSSubscription"
  },
  {
    "ResourceName": "AWS::S3::AccountSetting",
    "ListDescriber": "SequentialDescribeGlobal(describer.S3AccountSetting)",
    "GetDescriber": null,
    "SteampipeTable": "aws_s3_account_settings",
    "Model": "S3AccountSetting"
  },
  {
    "ResourceName": "AWS::SSM::ManagedInstanceCompliance",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMManagedInstanceCompliance)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssm_managed_instance_compliance",
    "Model": "SSMManagedInstanceCompliance"
  },
  {
    "ResourceName": "AWS::SSM::ManagedInstancePatchState",
    "ListDescriber": "ParallelDescribeRegional(describer.SSMManagedInstancePatchState)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssm_managed_instance_patch_state",
    "Model": "SSMManagedInstancePatchState"
  },
  {
    "ResourceName": "AWS::SSOAdmin::AccountAssignment",
    "ListDescriber": "ParallelDescribeRegional(describer.SSOAdminAccountAssignment)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssoadmin_account_assignment",
    "Model": "SSOAdminAccountAssignment"
  },
  {
    "ResourceName": "AWS::SSOAdmin::UserEffectiveAccess",
    "ListDescriber": "ParallelDescribeRegional(describer.UserEffectiveAccess)",
    "GetDescriber": null,
    "SteampipeTable": "aws_user_effective_access",
    "Model": "UserEffectiveAccess"
  },
  {
    "ResourceName": "AWS::SSOAdmin::Instance",
    "ListDescriber": "ParallelDescribeRegional(describer.SSOAdminInstance)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssoadmin_instance",
    "Model": "SSOAdminInstance"
  },
  {
    "ResourceName": "AWS::SSOAdmin::PermissionSet",
    "ListDescriber": "ParallelDescribeRegional(describer.SSOAdminPermissionSet)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssoadmin_permission_set",
    "Model": "SSOAdminPermissionSet"
  },
  {
    "ResourceName": "AWS::SSOAdmin::AttachedManagedPolicy",
    "ListDescriber": "ParallelDescribeRegional(describer.SSOAdminManagedPolicyAttachment)",
    "GetDescriber": null,
    "SteampipeTable": "aws_ssoadmin_managed_policy_attachment",
    "Model": "SSOAdminPolicyAttachment"
  },
  {
    "ResourceName": "AWS::ServiceDiscovery::Service",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceDiscoveryService)",
    "GetDescriber": null,
    "SteampipeTable": "aws_service_discovery_service",
    "Model": "ServiceDiscoveryService"
  },
  {
    "ResourceName": "AWS::ServiceDiscovery::Namespace",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceDiscoveryNamespace)",
    "GetDescriber": null,
    "TerraformName": [
      "aws_service_discovery_http_namespace",
      "aws_service_discovery_dns_namespace",
      "aws_service_discovery_private_dns_namespace",
      "aws_service_discovery_public_dns_namespace"
    ],
    "SteampipeTable": "aws_service_discovery_namespace",
    "Model": "ServiceDiscoveryNamespace"
  },
  {
    "ResourceName": "AWS::ServiceDiscovery::Instance",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceDiscoveryInstance)",
    "GetDescriber": null,
    "SteampipeTable": "aws_service_discovery_instance",
    "Model": "ServiceDiscoveryInstance"
  },
  {
    "ResourceName": "AWS::ServiceCatalog::Portfolio",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceCatalogPortfolio)",
    "GetDescriber": null,
    "SteampipeTable": "aws_servicecatalog_portfolio",
    "Model": "ServiceCatalogPortfolio"
  },
  {
    "ResourceName": "AWS::ServiceCatalog::Product",
    "ListDescriber": "ParallelDescribeRegional(describer.ServiceCatalogProduct)",
    "GetDescriber": null,
    "SteampipeTable": "aws_servicecatalog_product",
    "Model": "ServiceCatalogProduct"
  },
  {
    "ResourceName": "AWS::IdentityStore::User",
    "ListDescriber": "ParallelDescribeRegional(describer.IdentityStoreUser)",
    "GetDescriber": null,
    "SteampipeTable": "aws_identitystore_user",
    "Model": "IdentityStoreUser"
  },
  {
    "ResourceName": "AWS::IdentityStore::Group",
    "ListDescriber": "ParallelDescribeRegional(describer.IdentityStoreGroup)",
    "GetDescriber": null,
    "SteampipeTable": "aws_identitystore_group",
    "Model": "IdentityStoreGroup"
  },
  {
    "ResourceName": "AWS::IdentityStore::GroupMembership",
    "ListDescriber": "ParallelDescribeRegional(describer.IdentityStoreGroupMembership)",
    "GetDescriber": null,
    "SteampipeTable": "aws_identitystore_group_membership",
    "Model": "IdentityStoreGroupMembership"
  }
]
